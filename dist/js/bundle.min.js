"use strict";var loanForm={step1:{credit_type:"",loan_amount:"",loan_term:""},step2:{fname:"",lname:"",gender:""},step4:{salary:""},step5:{info:""}},ctaBtn=document.getElementById("cta-loan"),intro=document.querySelector(".small-loan__starter"),form=document.querySelector(".small-loan__form");ctaBtn.addEventListener("click",function(){intro.style.display="none",showQuestion(pageNo),form.style.display="block"});var formSteps=document.querySelectorAll(".small-loan__form__step"),pageNo=0;function showQuestion(e){formSteps.forEach(function(e){return e.style.display="none"}),formSteps[e].style.display="flex"}function getSelectValue(e){return e[e.selectedIndex].value}function validateRadio(e){var t=!1;return e.forEach(function(e){e.checked&&(t=!0)}),!t&&showAlert("Please select radio button value"),t}var alerAnchor=document.querySelector(".progress-bar");function showAlert(e){var t='<div class="errormsg">'+e+"</div>";alerAnchor.insertAdjacentHTML("afterend",t)}function removeAler(){var e=document.querySelector(".errormsg");if(e)return e.parentNode.removeChild(e)}function getRadioValue(e){var t="";return e.forEach(function(e){e.checked&&(t=e.value)}),t}function required(e){return 0!==e.length||(showAlert("The mandatory information is missing or incorrect!"),!1)}function validateText(e){return!!e.match(/^[A-Za-z\s]*$/)||(showAlert("The mandatory information must be letters only!"),!1)}function validateTextNumbers(e){return!!e.match(/^[0-9a-zA-Z]+$/)||(showAlert("The mandatory information must be letters & numbers only!"),!1)}function validateNumber(e){return!(parseFloat(e)<0||e.length>12)||(showAlert("Please enter correct amount (from 0 to 12 digits)"),!1)}var buttonBack=document.querySelectorAll(".js-back");buttonBack[0].style.visibility="hidden",buttonBack.forEach(function(e){e.addEventListener("click",function(){removeAler(),progressBarOnBack(pageNo),pageNo>0&&pageNo--,showQuestion(pageNo)})});var applicationForwardBtn=document.getElementById("application-forward");applicationForwardBtn.addEventListener("click",function(){removeAler();var e=document.getElementById("credit_type");if(required(getSelectValue(e))){loanForm.step1.credit_type=getSelectValue(e);var t=document.getElementById("loan_amount").value;if(required(t)&&validateNumber(t)){loanForm.step1.loan_amount=t;var r=document.getElementById("loan_term");required(getSelectValue(r))&&(loanForm.step1.loan_term=getSelectValue(r),showQuestion(++pageNo),progressBar(pageNo))}}});var gender=document.getElementsByName("gender"),contactsForwardBtn=document.getElementById("contacts-forward");contactsForwardBtn.addEventListener("click",function(){removeAler();var e=document.getElementById("fname").value;if(required(e)&&validateText(e)){loanForm.step2.fname=e;var t=document.getElementById("lname").value;if(required(t)&&validateText(t)){loanForm.step2.lname=t;var r=document.getElementsByName("gender");if(validateRadio(r)){loanForm.step2.gender=getRadioValue(r);var o=document.getElementById("docNo").value;required(o)&&validateTextNumbers(o)&&(loanForm.step2.docNo=o,showQuestion(++pageNo),progressBar(pageNo))}}}});var obligationForwardBtn=document.getElementById("obligation-forward");obligationForwardBtn.addEventListener("click",function(){removeAler();var e=document.getElementById("obligation-type"),t=document.getElementById("obligation-financer"),r=document.getElementById("obligation-term").value,o=document.getElementById("obligation-amount").value,n=document.getElementById("obligation-monthly-payement").value;if(""!=getSelectValue(e)||""!=getSelectValue(t)||""!=r||""!=o||""!=n){if(!required(getSelectValue(e)))return;if(!required(getSelectValue(t)))return;if(!required(r)||!validateNumber(r))return;if(!required(o)||!validateNumber(o))return;if(!required(n)||!validateNumber(n))return;loanForm.step3||(loanForm.step3={}),loanForm.step3.oblType=getSelectValue(e),loanForm.step3.oblFinancer=getSelectValue(t),loanForm.step3.oblTerm=r,loanForm.step3.oblAmount=o,loanForm.step3.oblPayment=n}else loanForm.step3&&delete loanForm.step3;showQuestion(++pageNo),progressBar(pageNo)});var incomeForwardBtn=document.getElementById("income-forward");incomeForwardBtn.addEventListener("click",function(){removeAler();var e=document.getElementById("salary").value;if(required(e)&&validateNumber(e)){loanForm.step4.salary=e;var t=document.getElementById("income-other").value;""!==t&&validateNumber(t)?loanForm.step4.incomeOther=t:loanForm.step4.incomeOther&&delete loanForm.step4.incomeOther;var r=document.getElementById("selfEmployer");r.checked?loanForm.step4.employer=r.value:loanForm.step4.employer="worker",showQuestion(++pageNo),progressBar(pageNo)}});var confirmBtn=document.getElementById("confirm");confirmBtn.addEventListener("click",function(){removeAler();var e=document.getElementById("additional-info").value;loanForm.step5.info=""!==e?e:"No additional information",form.style.display="none",printOut(),document.querySelector(".small-loan__results").style.display="block"});var allIncomes=document.querySelectorAll(".js-allIncomes");function sumarize(){var e=document.querySelectorAll(".js-allIncomes"),t=document.getElementById("total-income"),r=0;e.forEach(function(e){e.value&&(r+=parseFloat(e.value))}),t.textContent=r+" EUR"}function sortObject(e){return Object.keys(e).sort().reduce(function(t,r){return t[r]=e[r],t},{})}allIncomes.forEach(function(e){e.addEventListener("change",sumarize),e.addEventListener("keyup",sumarize)});var printContainer=document.querySelector(".print-out");function printOut(){var e="";for(var t in sortObject(loanForm)){e+='<h3 class="heading-tertiary">'+printValues[t]+"</h3>";var r="";for(var o in loanForm[t])r+='\n\t\t\t\t\t<li class="small-loan__results__items">\n\t\t\t\t\t\t<span class="small-loan__results__key">'+printValues[o]+'</span>\n\t\t\t\t\t\t<span class="small-loan__results__value">'+(printValues[loanForm[t][o]]?printValues[loanForm[t][o]]:loanForm[t][o])+"</span>\n\t\t\t\t\t</li>\n\t\t\t";e+='<ul class="small-loan__results__list">'+r+"</ul>"}printContainer.innerHTML=e}var filler=document.querySelector(".progress-bar__h-line--filler"),progresBarBulbs=document.querySelectorAll(".progress-bar__item");function progressBar(e){progresBarBulbs[e].style.backgroundColor="#ee7023",progresBarBulbs[e-1].innerHTML='<i class="fa fa-check"></i>',filler.style.width=25*e+"%"}function progressBarOnBack(e){progresBarBulbs[e].style.backgroundColor="#fdc129",progresBarBulbs[e-1].innerHTML=""+e,filler.style.width=25*e+"%"}var printValues={step1:"Loan details",step2:"Contact information",step3:"Obligation details",step4:"Your income",step5:"Additional information",loan_amount:"Loan amount",loan_term:"Loan term",fname:"First name",lname:"Last name",gender:"Gender",salary:"Main Income",info:"Additional information",personal_credit:"Personal credit",familyHh_credit:"Family/household credit",female:"Female",male:"Male",other:"Other",oblType:"Type of obligation",oblFinancer:"Obligation financer",oblTerm:"Term (year)",oblAmount:"Amount/limit",oblPayment:"Monthly payment",home_loan:"Home loan",consumer_loan:"Consumer loan",car_lease:"Car lease",luminor:"Luminor Bank",seb:"SEB Bank",fast_credit:"Fast Credit",incomeOther:"Other Incomes",selfempl:"Self employee",worker:"Worker",employer:"Type of employment",credit_type:"Type of Credit"};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
